What happens when you initialize a repository? Why do you need to do it?

    The version control process is started and the .git folder is created.
    This means that the changes can be tracked after making the first commit.
    The .git folder contains all the metadata related to the repository, including the commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?

    The staging area can be seen as a transition area which contains the files that are modified in the working directory and that will be comitted to the repository.
    It's value relies on the ability to choose what files to commit, because you don't always want to commit everything.

How can you use the staging area to make sure you have one commit per logical change?

    You can add files to the stagging area and check the differences between them and the last commit in the repository. This way you can make sure you are commiting just the logical change intended.
    All of this while other changes in other files await in your working directory.

What are some situations when branches would be helpful in keeping your history organized? How would brances help?

    They are helpful when you want to make a change that is "not official", for example to experiment.
    Anothe use would be to have two different versions, that are related but somwhow different. For example having two UI options, languages, or as we saw in the example, an easier version of a game.

How do the diagrams help you visualize the branch structure?

    They allow me to see where the branch starts and the commit history each branch had.
    With this diagram I can mentally map (or graph) the actual structure of the branches.
    You can see it as a tree with branches, and this will give you clarity of the different tips that are available and the reason for each.
